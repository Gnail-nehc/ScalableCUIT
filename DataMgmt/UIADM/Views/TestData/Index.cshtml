@model UIADM.ViewModels.TestDataInfo
@using UIADM.Extensions

<script src="~/Scripts/thickbox.js" type="text/javascript"></script>
<link rel="stylesheet" href="~/Content/thickbox.css" type="text/css" media="screen" />

@{
    Html.EnableClientValidation();
}

@{
    UIADM.ViewModels.PagingInfo pagingInfo = new UIADM.ViewModels.PagingInfo
    {
        PageIndex = (int)ViewBag.PageIndex,
        RecordCount = (int)ViewBag.RecordCount
    };
    Func<int, UrlHelper, string> pageUrlAccessor = (Func<int, UrlHelper, string>)ViewBag.PageUrlAccessor;
}

<div style="position:relative;">
    @Ajax.ActionLink("New", "Create", "TestData", null, new AjaxOptions { UpdateTargetId = "body" }, new { @class = "imgCreation", @title = "add a Data for test case" })
    @if (null == Session["TestCaseBound"])
    {
        @Html.ActionLink("Bind Test Case", "BindTestCase", new { height = 120, width = 400, modal = true }, new { @id = "imgBound", @class = "thickbox", @title = "Bind Test Case" })
    }
    else
    {
        @Ajax.ActionLink("Unbind", "Unbind", "TestData", null, new AjaxOptions { UpdateTargetId = "body" }, new { @id = "imgUnbound", @title = "unbind test case" })
    }
</div>

<div class="paging">@Html.PageLinks(pagingInfo, pageIndex => pageUrlAccessor(pageIndex, Url))</div>

@if (null != Session["TestCaseBound"])
{ 
    <p style="font:600;color:gold">Test Case ID: @Session["TestCaseBound"].ToString()</p>
}

<table>
    <tr>
        @if (null == Session["TestCaseBound"])
        { 
            <th>@Html.LabelFor(m => m.SelectedTestData.TestCaseId)</th>
        }
        <th>@Html.LabelFor(m => m.SelectedTestData.Name)</th>
        <th>@Html.LabelFor(m => m.SelectedTestData.Value)</th>
    </tr>
@using (Ajax.BeginForm(new AjaxOptions { UpdateTargetId = "tbody" }))
{
    <tr>
        @if (null == Session["TestCaseBound"])
        { 
            <td>@Html.TextBoxFor(m => m.FindConditionEntity.TestCaseId, new { @Value = "", @class = "unifiedtextbox" })</td>
        }
        <td>@Html.TextBoxFor(m => m.FindConditionEntity.Name, new { @Value = "", @class = "unifiedtextbox" })
			@Html.ValidationMessageFor(m => m.FindConditionEntity.Name)
        </td>
        <td>@Html.TextBoxFor(m => m.FindConditionEntity.Value, new { @Value = "", @class = "unifiedtextbox" })</td>
        <td><input name="query" type="image" src="~/Images/query.png" class="imgbtn" title="Query"/></td>
    </tr>
}
    <tbody id="tbody">
        @if (null == Session["TestCaseBound"])
        {
            foreach (var item in Model.TestDataMore)
            {
                using (Ajax.BeginForm(new AjaxOptions { UpdateTargetId = "updateditem" }))
                {
                <tr id="updateditem">@Html.HiddenFor(m => m.SelectedTestData.Id, new { @Value = item.Id })
                @if (!object.Equals(item.Id, Session["UpdatedId_t"]))
                {
                    <td>@item.TestCaseId</td>
                    <td>@item.Name</td>
                    <td>@item.Value</td>
                    <td><input name="edit" type="image" src="~/Images/edit.png" class="imgbtn" title="Edit" /></td>
                    <td>
                        <input name="delete" type="image" src="~/Images/delete.png" class="imgbtn" title="Delete" onclick="return confirm('Are you sure to delete?');" />
                    </td>
                }
                else
                {
                    <td>@Html.TextBoxFor(m => m.SelectedTestData.TestCaseId, new { @Value = item.TestCaseId, @class = "unifiedtextbox" })
                        @Html.ValidationMessageFor(m => m.SelectedTestData.TestCaseId)
                    </td>
                    <td>@Html.TextBoxFor(m => m.SelectedTestData.Name, new { @Value = item.Name, @class = "unifiedtextbox" })
                        @Html.ValidationMessageFor(m => m.SelectedTestData.Name)
                    </td>
                    <td>@Html.TextBoxFor(m => m.SelectedTestData.Value, new { @Value = item.Value, @class = "unifiedtextbox" })</td>
                    <td><input name="save" type="image" src="~/Images/save.png" class="imgbtn" title="Save" /></td>         
                    <td><input name="cancel" type="image" src="~/Images/cancel.png" class="imgbtn" title="Back" /></td>
                }
                </tr>
                }
            }
        }
        else
        {
            foreach (var item in Model.TestDataMore)
            {
                using (Ajax.BeginForm(new AjaxOptions { UpdateTargetId = "updateditem" }))
                {
                <tr id="updateditem">@Html.HiddenFor(m => m.SelectedTestData.Id, new { @Value = item.Id })
                @if (!object.Equals(item.Id, Session["UpdatedId_t"]))
                {
                    <td>@item.Name</td>
                    <td>@item.Value</td>
                    <td><input name="edit" type="image" src="~/Images/edit.png" class="imgbtn" title="Edit" /></td>
                    <td>
                        <input name="delete" type="image" src="~/Images/delete.png" class="imgbtn" title="Delete" onclick="return confirm('Are you sure to delete?');" />
                    </td>
                }
                else
                {
                    <td>@Html.TextBoxFor(m => m.SelectedTestData.Name, new { @Value = item.Name, @class = "unifiedtextbox" })
                        @Html.ValidationMessageFor(m => m.SelectedTestData.Name)
                    </td>
                    <td>@Html.TextBoxFor(m => m.SelectedTestData.Value, new { @Value = item.Value, @class = "unifiedtextbox" })</td>
                    <td><input name="save" type="image" src="~/Images/save.png" class="imgbtn" title="Save" /></td>         
                    <td><input name="cancel" type="image" src="~/Images/cancel.png" class="imgbtn" title="Back" /></td>
                }
                </tr>
                }
            }
        }

    </tbody>
    
</table>

@if (null != Session["Log_t"])
{
    <p style="color:red">
        @Session["Log_t"].ToString()
    </p>
}

<div class="paging">@Html.PageLinks(pagingInfo, pageIndex => pageUrlAccessor(pageIndex, Url))</div>